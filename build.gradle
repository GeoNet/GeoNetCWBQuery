apply plugin: 'java'
apply plugin: 'application'

group = 'nz.org.geonet'
version = '4.3.0-GRADLE'

mainClassName = "gov.usgs.anss.query.EdgeQueryClient"

project.file('build/temporary').mkdirs()

repositories {
  maven {
        credentials {
            username geonetUser
            password geonetPassword
        }
        url 'https://geonet.artifactoryonline.com/geonet/all'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'
    }
}

dependencies {
    compile group: 'gov.usgs.anss', name: 'EdgeFile', version: 'unknown-1'
    compile group: 'gov.usgs.anss', name: 'Usgs', version: 'unknown-1'
    compile group: 'joda-time', name: 'joda-time', version: '1.6'
    compile group: 'TauP', name: 'TauP-no-sac-timeseries', version: '1.1.7'
    compile group: 'log4j', name: 'log4j', version: '1.2.8'
    compile group: 'commons-io', name: 'commons-io', version: '2.0.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.2.4'
    compile group: 'org.simpleframework', name: 'simple-xml', version: '2.7'
    testCompile group: 'junit', name: 'junit', version: '4.7'
    testCompile group: 'gsbase', name: 'gsbase', version: '2.0.1'
    testCompile group: 'nz.org.geonet', name: 'CWBQueryTestData', version: '1.0.4'
}

jar {
        manifest {
                attributes(
			"provider": "gradle",
			"Implementation-Title": project.name,
			"Implementation-Version": project.version,
			"Main-Class": project.mainClassName
		)
        }
}

task unzip(type: Copy, dependsOn: [jar]) {
  configurations.compile.each { File file -> from zipTree(file) into 'build/temporary' }
  from zipTree(project.jar.archivePath.getPath()) into 'build/temporary'
}
task rezip(type: Jar, dependsOn: unzip, overwrite: true) {
  	from 'build/temporary'
        manifest {
                attributes(
			"provider": "gradle",
			"Implementation-Title": project.name,
			"Implementation-Version": project.version,
			"Main-Class": project.mainClassName
		)
        }
  	baseName = 'repacked'
}

task repack(type: proguard.gradle.ProGuardTask, dependsOn: rezip) {

  injars(rezip.archivePath)
  outjars(project.jar.archivePath.getPath())

  libraryjars "${System.getProperty('java.home')}/lib/rt.jar"

  verbose
  ignorewarnings
  dontobfuscate
  dontshrink
  dontoptimize

  keep 'public class gov.usgs.anss.query.EdgeQueryClient { \
        public static void main(java.lang.String[]); \
    }'
}
